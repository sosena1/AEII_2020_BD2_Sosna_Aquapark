-- MySQL Script generated by MySQL Workbench
-- Thu Apr 16 16:28:50 2020
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';

-- -----------------------------------------------------
-- Schema BD_AEiI_Informatyka
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema BD_AEiI_Informatyka
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `BD_AEiI_Informatyka` DEFAULT CHARACTER SET utf8 ;
USE `BD_AEiI_Informatyka` ;

-- -----------------------------------------------------
-- Table `BD_AEiI_Informatyka`.`Gender`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `BD_AEiI_Informatyka`.`Gender` (
  `genderId` INT NOT NULL,
  `genderName` VARCHAR(10) NOT NULL,
  PRIMARY KEY (`genderId`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `BD_AEiI_Informatyka`.`User`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `BD_AEiI_Informatyka`.`User` (
  `userId` INT NOT NULL,
  `firstName` VARCHAR(45) NULL,
  `lastName` VARCHAR(45) NULL,
  `address` VARCHAR(45) NULL,
  `contactNumber` VARCHAR(45) NULL,
  `otherInformation` VARCHAR(45) NULL,
  `userName` VARCHAR(45) NULL,
  `password` VARCHAR(45) NULL,
  `pesel` VARCHAR(45) NULL,
  `birthDate` DATE NULL,
  `genderId` INT NOT NULL,
  PRIMARY KEY (`userId`),
  INDEX `genderId_idx` (`genderId` ASC) VISIBLE,
  CONSTRAINT `genderId`
    FOREIGN KEY (`genderId`)
    REFERENCES `BD_AEiI_Informatyka`.`Gender` (`genderId`)
    ON DELETE RESTRICT
    ON UPDATE RESTRICT)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `BD_AEiI_Informatyka`.`Client`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `BD_AEiI_Informatyka`.`Client` (
  `clientId` INT NOT NULL,
  `ownsAccount` TINYINT NOT NULL,
  `userId` INT NOT NULL,
  PRIMARY KEY (`clientId`),
  INDEX `userId_idx` (`userId` ASC) VISIBLE,
  CONSTRAINT `userId`
    FOREIGN KEY (`userId`)
    REFERENCES `BD_AEiI_Informatyka`.`User` (`userId`)
    ON DELETE RESTRICT
    ON UPDATE RESTRICT)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `BD_AEiI_Informatyka`.`ClientIdentificator`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `BD_AEiI_Informatyka`.`ClientIdentificator` (
  `identificatorId` INT NOT NULL,
  `isInUse` TINYINT NOT NULL,
  PRIMARY KEY (`identificatorId`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `BD_AEiI_Informatyka`.`Visit`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `BD_AEiI_Informatyka`.`Visit` (
  `visitId` INT NOT NULL,
  `date` DATE NOT NULL,
  `startTime` TIME NOT NULL,
  `endTime` TIME NOT NULL,
  `value` DECIMAL NOT NULL,
  `name` VARCHAR(45) NOT NULL,
  `identificatorId` INT NOT NULL,
  `userId` INT NOT NULL,
  PRIMARY KEY (`visitId`),
  INDEX `identificatorId_idx` (`identificatorId` ASC) VISIBLE,
  INDEX `userId_idx` (`userId` ASC) VISIBLE,
  CONSTRAINT `userId`
    FOREIGN KEY (`userId`)
    REFERENCES `BD_AEiI_Informatyka`.`Client` (`clientId`)
    ON DELETE RESTRICT
    ON UPDATE RESTRICT,
  CONSTRAINT `identificatorId`
    FOREIGN KEY (`identificatorId`)
    REFERENCES `BD_AEiI_Informatyka`.`ClientIdentificator` (`identificatorId`)
    ON DELETE RESTRICT
    ON UPDATE RESTRICT)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `BD_AEiI_Informatyka`.`Employee`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `BD_AEiI_Informatyka`.`Employee` (
  `employeeId` INT NOT NULL,
  `userId` INT NOT NULL,
  PRIMARY KEY (`employeeId`),
  INDEX `userId_idx` (`userId` ASC) VISIBLE,
  CONSTRAINT `userId`
    FOREIGN KEY (`userId`)
    REFERENCES `BD_AEiI_Informatyka`.`User` (`userId`)
    ON DELETE RESTRICT
    ON UPDATE RESTRICT)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `BD_AEiI_Informatyka`.`Role`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `BD_AEiI_Informatyka`.`Role` (
  `roleId` INT NOT NULL,
  `roleName` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`roleId`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `BD_AEiI_Informatyka`.`PriceList`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `BD_AEiI_Informatyka`.`PriceList` (
  `priceListId` INT NOT NULL,
  `validityStartDate` DATE NOT NULL,
  `userId` INT NOT NULL,
  PRIMARY KEY (`priceListId`),
  INDEX `userId_idx` (`userId` ASC) VISIBLE,
  CONSTRAINT `userId`
    FOREIGN KEY (`userId`)
    REFERENCES `BD_AEiI_Informatyka`.`Employee` (`employeeId`)
    ON DELETE RESTRICT
    ON UPDATE RESTRICT)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `BD_AEiI_Informatyka`.`AquaparkAttraction`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `BD_AEiI_Informatyka`.`AquaparkAttraction` (
  `attractionId` INT NOT NULL,
  `maxUsers` INT NOT NULL,
  `name` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`attractionId`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `BD_AEiI_Informatyka`.`AquaparkAttractionMaintenance`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `BD_AEiI_Informatyka`.`AquaparkAttractionMaintenance` (
  `attractionMaintenanceId` INT NOT NULL,
  `description` VARCHAR(45) NULL,
  `date` DATE NULL,
  `employeeId` INT NOT NULL,
  `expenseId` INT NULL,
  `aquaparkAttractionId` INT NOT NULL,
  PRIMARY KEY (`attractionMaintenanceId`),
  INDEX `employeeId_idx` (`employeeId` ASC) INVISIBLE,
  INDEX `aquaparkAttractionId_idx` (`aquaparkAttractionId` ASC) VISIBLE,
  CONSTRAINT `employeeId`
    FOREIGN KEY (`employeeId`)
    REFERENCES `BD_AEiI_Informatyka`.`Employee` (`employeeId`)
    ON DELETE RESTRICT
    ON UPDATE RESTRICT,
  CONSTRAINT `aquaparkAttractionId`
    FOREIGN KEY (`aquaparkAttractionId`)
    REFERENCES `BD_AEiI_Informatyka`.`AquaparkAttraction` (`attractionId`)
    ON DELETE RESTRICT
    ON UPDATE RESTRICT)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `BD_AEiI_Informatyka`.`AquaparkAttractionGate`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `BD_AEiI_Informatyka`.`AquaparkAttractionGate` (
  `gateId` INT NOT NULL,
  `attractionId` INT NOT NULL,
  PRIMARY KEY (`gateId`),
  INDEX `attractionId_idx` (`attractionId` ASC) VISIBLE,
  CONSTRAINT `attractionId`
    FOREIGN KEY (`attractionId`)
    REFERENCES `BD_AEiI_Informatyka`.`AquaparkAttraction` (`attractionId`)
    ON DELETE RESTRICT
    ON UPDATE RESTRICT)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `BD_AEiI_Informatyka`.`AquaparkAttractionGateEvent`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `BD_AEiI_Informatyka`.`AquaparkAttractionGateEvent` (
  `eventId` INT NOT NULL,
  `isEntering` TINYINT NOT NULL,
  `date` DATE NOT NULL,
  `time` TIME NOT NULL,
  `gateId` INT NOT NULL,
  `ClientIdentificator_identificatorId` INT NOT NULL,
  PRIMARY KEY (`eventId`),
  INDEX `gateId_idx` (`gateId` ASC) INVISIBLE,
  INDEX `identificatorId` (`ClientIdentificator_identificatorId` ASC) VISIBLE,
  CONSTRAINT `gateId`
    FOREIGN KEY (`gateId`)
    REFERENCES `BD_AEiI_Informatyka`.`AquaparkAttractionGate` (`gateId`)
    ON DELETE RESTRICT
    ON UPDATE RESTRICT,
  CONSTRAINT `identificatorId`
    FOREIGN KEY (`ClientIdentificator_identificatorId`)
    REFERENCES `BD_AEiI_Informatyka`.`ClientIdentificator` (`identificatorId`)
    ON DELETE RESTRICT
    ON UPDATE RESTRICT)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `BD_AEiI_Informatyka`.`AquaparkAttractionUsage`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `BD_AEiI_Informatyka`.`AquaparkAttractionUsage` (
  `usageId` INT NOT NULL,
  `attractionId` INT NOT NULL,
  `priceListItemId` INT NOT NULL,
  `visitId` INT NOT NULL,
  `enteringEventId` INT NOT NULL,
  `leavingEventId` INT NULL,
  PRIMARY KEY (`usageId`),
  INDEX `attractionId_idx` (`attractionId` ASC) VISIBLE,
  INDEX `priceListItemId_idx` (`priceListItemId` ASC) VISIBLE,
  INDEX `visitId_idx` (`visitId` ASC) VISIBLE,
  INDEX `enteringEventId_idx` (`enteringEventId` ASC) VISIBLE,
  INDEX `leavingEventId_idx` (`leavingEventId` ASC) VISIBLE,
  CONSTRAINT `attractionId`
    FOREIGN KEY (`attractionId`)
    REFERENCES `BD_AEiI_Informatyka`.`AquaparkAttraction` (`attractionId`)
    ON DELETE RESTRICT
    ON UPDATE RESTRICT,
  CONSTRAINT `priceListItemId`
    FOREIGN KEY (`priceListItemId`)
    REFERENCES `BD_AEiI_Informatyka`.`PriceListItem` (`priceListItemId`)
    ON DELETE RESTRICT
    ON UPDATE RESTRICT,
  CONSTRAINT `visitId`
    FOREIGN KEY (`visitId`)
    REFERENCES `BD_AEiI_Informatyka`.`Visit` (`visitId`)
    ON DELETE RESTRICT
    ON UPDATE RESTRICT,
  CONSTRAINT `enteringEventId`
    FOREIGN KEY (`enteringEventId`)
    REFERENCES `BD_AEiI_Informatyka`.`AquaparkAttractionGateEvent` (`eventId`)
    ON DELETE RESTRICT
    ON UPDATE RESTRICT,
  CONSTRAINT `leavingEventId`
    FOREIGN KEY (`leavingEventId`)
    REFERENCES `BD_AEiI_Informatyka`.`AquaparkAttractionGateEvent` (`eventId`)
    ON DELETE RESTRICT
    ON UPDATE RESTRICT)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `BD_AEiI_Informatyka`.`Conditions`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `BD_AEiI_Informatyka`.`Conditions` (
  `conditionId` INT NOT NULL,
  `weekendOnly` TINYINT NOT NULL,
  `childOnly` TINYINT NOT NULL,
  `seniorOnly` TINYINT NOT NULL,
  PRIMARY KEY (`conditionId`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `BD_AEiI_Informatyka`.`PriceListItem`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `BD_AEiI_Informatyka`.`PriceListItem` (
  `priceListItemId` INT NOT NULL,
  `name` VARCHAR(45) NOT NULL,
  `value` DECIMAL NOT NULL,
  `description` VARCHAR(45) NOT NULL,
  `usageId` INT NOT NULL,
  `priceListId` INT NOT NULL,
  `conditionalId` INT NOT NULL,
  PRIMARY KEY (`priceListItemId`),
  INDEX `conditionalId_idx` (`conditionalId` ASC) VISIBLE,
  INDEX `usageId_idx` (`usageId` ASC) VISIBLE,
  INDEX `priceListId_idx` (`priceListId` ASC) VISIBLE,
  CONSTRAINT `priceListId`
    FOREIGN KEY (`priceListId`)
    REFERENCES `BD_AEiI_Informatyka`.`PriceList` (`priceListId`)
    ON DELETE RESTRICT
    ON UPDATE RESTRICT,
  CONSTRAINT `usageId`
    FOREIGN KEY (`usageId`)
    REFERENCES `BD_AEiI_Informatyka`.`AquaparkAttractionUsage` (`usageId`)
    ON DELETE RESTRICT
    ON UPDATE RESTRICT,
  CONSTRAINT `conditionalId`
    FOREIGN KEY (`conditionalId`)
    REFERENCES `BD_AEiI_Informatyka`.`Conditions` (`conditionId`)
    ON DELETE RESTRICT
    ON UPDATE RESTRICT)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `BD_AEiI_Informatyka`.`Role_has_Employee`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `BD_AEiI_Informatyka`.`Role_has_Employee` (
  `roleId` INT NOT NULL,
  `employeeId` INT NOT NULL,
  PRIMARY KEY (`roleId`, `employeeId`),
  INDEX `fk_Role_has_Employee_Employee1_idx` (`employeeId` ASC) VISIBLE,
  INDEX `fk_Role_has_Employee_Role1_idx` (`roleId` ASC) VISIBLE,
  CONSTRAINT `roleId`
    FOREIGN KEY (`roleId`)
    REFERENCES `BD_AEiI_Informatyka`.`Role` (`roleId`)
    ON DELETE RESTRICT
    ON UPDATE RESTRICT,
  CONSTRAINT `employeeId`
    FOREIGN KEY (`employeeId`)
    REFERENCES `BD_AEiI_Informatyka`.`Employee` (`employeeId`)
    ON DELETE RESTRICT
    ON UPDATE RESTRICT)
ENGINE = InnoDB;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
